# To be generated by Facebook's `reindeer` tool once that is open source.

rust_library(
    name = "anyhow",
    srcs = glob(["vendor/anyhow-1.0.26/src/**"]),
    visibility = ["PUBLIC"],
    features = ["std"],
)

rust_library(
    name = "bitflags",
    srcs = glob(["vendor/bitflags-1.2.1/src/**"]),
)

rust_library(
    name = "cc",
    srcs = glob(["vendor/cc-1.0.50/src/**"]),
    visibility = ["PUBLIC"],
)

rust_library(
    name = "clap",
    srcs = glob(["vendor/clap-2.33.0/src/**"]),
    edition = "2015",
    deps = [
        ":bitflags",
        ":textwrap",
        ":unicode-width",
    ],
)

rust_library(
    name = "codespan",
    srcs = glob(["vendor/codespan-0.7.0/src/**"]),
    visibility = ["PUBLIC"],
    deps = [":unicode-segmentation"],
)

rust_library(
    name = "codespan-reporting",
    srcs = glob(["vendor/codespan-reporting-0.7.0/src/**"]),
    visibility = ["PUBLIC"],
    deps = [
        ":codespan",
        ":termcolor",
        ":unicode-width",
    ],
)

rust_library(
    name = "heck",
    srcs = glob(["vendor/heck-0.3.1/src/**"]),
    edition = "2015",
    deps = [":unicode-segmentation"],
)

rust_library(
    name = "lazy_static",
    srcs = glob(["vendor/lazy_static-1.4.0/src/**"]),
)

rust_library(
    name = "link-cplusplus",
    srcs = glob(["vendor/link-cplusplus-1.0.1/src/**"]),
    visibility = ["PUBLIC"],
)

rust_library(
    name = "proc-macro-error",
    srcs = glob(["vendor/proc-macro-error-0.4.10/src/**"]),
    rustc_flags = ["--cfg=use_fallback"],
    deps = [
        ":proc-macro-error-attr",
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

rust_library(
    name = "proc-macro-error-attr",
    srcs = glob(["vendor/proc-macro-error-attr-0.4.10/src/**"]),
    proc_macro = True,
    deps = [
        ":proc-macro2",
        ":quote",
        ":syn",
        ":syn-mid",
    ],
)

rust_library(
    name = "proc-macro2",
    srcs = glob(["vendor/proc-macro2-1.0.9/src/**"]),
    visibility = ["PUBLIC"],
    features = [
        "proc-macro",
        "span-locations",
    ],
    rustc_flags = [
        "--cfg=span_locations",
        "--cfg=use_proc_macro",
        "--cfg=wrap_proc_macro",
    ],
    deps = [":unicode-xid"],
)

rust_library(
    name = "quote",
    srcs = glob(["vendor/quote-1.0.2/src/**"]),
    visibility = ["PUBLIC"],
    features = ["proc-macro"],
    deps = [":proc-macro2"],
)

rust_library(
    name = "structopt",
    srcs = glob(["vendor/structopt-0.3.11/src/**"]),
    visibility = ["PUBLIC"],
    deps = [
        ":clap",
        ":lazy_static",
        ":structopt-derive",
    ],
)

rust_library(
    name = "structopt-derive",
    srcs = glob(["vendor/structopt-derive-0.4.4/src/**"]),
    proc_macro = True,
    deps = [
        ":heck",
        ":proc-macro-error",
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

rust_library(
    name = "syn",
    srcs = glob(["vendor/syn-1.0.16/src/**"]),
    visibility = ["PUBLIC"],
    features = [
        "clone-impls",
        "derive",
        "full",
        "parsing",
        "printing",
        "proc-macro",
    ],
    deps = [
        ":proc-macro2",
        ":quote",
        ":unicode-xid",
    ],
)

rust_library(
    name = "syn-mid",
    srcs = glob(["vendor/syn-mid-0.5.0/src/**"]),
    deps = [
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

rust_library(
    name = "termcolor",
    srcs = glob(["vendor/termcolor-1.1.0/src/**"]),
)

rust_library(
    name = "textwrap",
    srcs = glob(["vendor/textwrap-0.11.0/src/**"]),
    deps = [":unicode-width"],
)

rust_library(
    name = "thiserror",
    srcs = glob(["vendor/thiserror-1.0.11/src/**"]),
    visibility = ["PUBLIC"],
    deps = [":thiserror-impl"],
)

rust_library(
    name = "thiserror-impl",
    srcs = glob(["vendor/thiserror-impl-1.0.11/src/**"]),
    proc_macro = True,
    deps = [
        ":proc-macro2",
        ":quote",
        ":syn",
    ],
)

rust_library(
    name = "unicode-segmentation",
    srcs = glob(["vendor/unicode-segmentation-1.6.0/src/**"]),
    edition = "2015",
)

rust_library(
    name = "unicode-width",
    srcs = glob(["vendor/unicode-width-0.1.7/src/**"]),
)

rust_library(
    name = "unicode-xid",
    srcs = glob(["vendor/unicode-xid-0.2.0/src/**"]),
)
